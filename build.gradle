plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'Sekwang'
version = '0.0.1-SNAPSHOT'
description = 'Sekwang_Project'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
}

tasks.named('test') {
	useJUnitPlatform()
}


// ① 프런트 빌드
tasks.register('buildFrontend', Exec) {
	workingDir "$projectDir/frontend"
	commandLine (System.properties['os.name'].toLowerCase().contains('windows')
			? ["cmd", "/c", "npm", "run", "build"]
			: ["bash", "-lc", "npm run build"])
}

// ② dist → Spring 정적리소스로 복사 (/app 하위)
tasks.register('copyFrontend', Copy) {
	dependsOn 'buildFrontend'
	from("$projectDir/frontend/dist")
	into("$projectDir/src/main/resources/static/app")
}

// ③ 리소스 처리 전에 복사되도록 연결
processResources.dependsOn 'copyFrontend'